<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<display-name>online-task-force</display-name>
	<!--
		There are three means to configure Wickets configuration mode and they 
		are tested in the order given.
		
		1) A system property: -Dwicket.configuration 
		2) servlet specific <init-param> 
		3) context specific <context-param>

		The value might be either "development" (reloading when templates change) or 
		"deployment". If no configuration is found, "development" is the default. -->

	<filter>
		<filter-name>wicket.online-task-force</filter-name>
		<filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
		<init-param>
			<param-name>applicationClassName</param-name>
			<param-value>org.onlinetaskforce.web.frontend.application.OtfApplication</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>wicket.online-task-force</filter-name>
		<url-pattern>/otf/*</url-pattern>
	</filter-mapping>

    <!-- Spring Application Context -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:spring/applicationcontext.xml
        </param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- hibernate filter to avoid LazyInitializationException -->
    <filter>
        <filter-name>OpenSessionInViewFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <description>
                Om te zorgen dat er tijdens de use cases binnen de gemapte requests maar 1 Hibernate sessie gecreeerd wordt per request.
                Op die manier zorgen we ervoor dat een database record maar door 1 Java object instance
                gerepresenteerd wordt.
                Ook om problemen te vermijden wanneer objecten aan die aan een sessie gebonden zijn en in een volgende sessie (binnen
                dezelfde request) aan een nieuwe sessie gebonden moeten worden.
            </description>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <description>
                Geeft de bean naam aan waarmee deze filter de sessionFactory kan ophalen uit Spring.
            </description>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>otfSessionFactory</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>OpenSessionInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>

    </filter-mapping>


    <session-config>
      <session-timeout>30</session-timeout>
    </session-config>

</web-app>
